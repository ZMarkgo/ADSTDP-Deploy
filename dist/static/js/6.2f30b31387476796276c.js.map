{"version":3,"sources":["webpack:///src/components/test/TestDetails.vue","webpack:///./src/components/test/TestDetails.vue?e0ca","webpack:///./src/components/test/TestDetails.vue"],"names":["TestDetails","name","data","server_projection_url","timer","currentTestCase","logInfo","created","console","log","this","myRefresh","mounted","setInterval","destroyed","clearInterval","methods","loadLogInfo","_this","$axios","get","then","resp","code","result","catch","error","loadCurrentTestInfo","callScript","_this2","post","$alert","message","confirmButtonText","endScript","_this3","startTest","endTest","test_TestDetails","render","_vm","_h","$createElement","_c","_self","staticStyle","align-self","width","margin","staticClass","border","height","_v","text-align","font-size","_s","system","type","initialScenario","duration","environments","staticObstacles","dynamicObstacles","trafficFacilities","targetAccidents","evaluationStrategies","_e","testedScenariosNum","accidentScenariosNum","iterations","testDuration","on","click","directives","rawName","value","expression","attrs","id","readonly","domProps","input","$event","target","composing","$set","src","allowfullscreen","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/6.2f30b31387476796276c.js","sourcesContent":["<template>\n  <div style=\"align-self: center; width: 1400px;margin: 35px auto 0 auto\">\n    <div class=\"parallel-alignment\">\n      <div class=\"current-test-info\" style=\"border: solid;width:30%;height:340px\">\n        <h1>当前测试信息</h1>\n        <div v-if=\"currentTestCase\" style=\"text-align: left\">\n<!--          <div ><span style=\"font-size: 18px\">目标系统： {{ currentTestCase.system.type }}</span></div>-->\n<!--          <div ><span style=\"font-size: 18px\">初始场景选取：{{ currentTestCase.initialscenario.type }}</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">场景测试时长：{{ currentTestCase.duration }} h</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">环境要素：{{ currentTestCase.environments.type }}</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">静态障碍物：{{ currentTestCase.staticobstacles.type }}</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">动态障碍物：{{ currentTestCase.dynamicobstacles.type }}</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">交通设施：{{ currentTestCase.trafficfacilities.type }}</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">目标事故类型：{{ currentTestCase.targetaccidents.type }}</span></div>-->\n<!--          <div><span style=\"font-size: 18px\">场景评估策略：{{ currentTestCase.evaluationstrategies.type }}</span></div>-->\n          <div ><span style=\"font-size: 18px\">目标系统： {{ currentTestCase.system.type }}</span></div>\n          <div ><span style=\"font-size: 18px\">初始场景选取：{{ currentTestCase.initialScenario.type }}</span></div>\n          <div><span style=\"font-size: 18px\">场景测试时长：{{ currentTestCase.duration }} h</span></div>\n          <div><span style=\"font-size: 18px\">环境要素：{{ currentTestCase.environments.type }}</span></div>\n          <div><span style=\"font-size: 18px\">静态障碍物：{{ currentTestCase.staticObstacles.type }}</span></div>\n          <div><span style=\"font-size: 18px\">动态障碍物：{{ currentTestCase.dynamicObstacles.type }}</span></div>\n          <div><span style=\"font-size: 18px\">交通设施：{{ currentTestCase.trafficFacilities.type }}</span></div>\n          <div><span style=\"font-size: 18px\">目标事故类型：{{ currentTestCase.targetAccidents.type }}</span></div>\n          <div><span style=\"font-size: 18px\">场景评估策略：{{ currentTestCase.evaluationStrategies.type }}</span></div>\n        </div>\n      </div>\n      <div class=\"test-log\" style=\"border: solid;width:70%;height:340px;\">\n        <h1>测试日志</h1>\n        <div class=\"parallel-alignment\">\n          <div v-if=\"logInfo\" style=\"text-align: left\">\n            <div><span style=\"font-size: 18px\">测试场景队列数量: {{logInfo.testedScenariosNum}}</span></div>\n            <div><span style=\"font-size: 18px\">事故场景数量: {{logInfo.accidentScenariosNum}}</span></div>\n            <div><span style=\"font-size: 18px\">迭代次数: {{logInfo.iterations}}</span></div>\n            <div><span style=\"font-size: 18px\">测试时长: {{logInfo.testDuration}} h</span></div>\n            <button @click=\"startTest\"><span style=\"font-size: 20px\">开始模拟测试</span></button>\n            <br>\n            <button @click=\"endTest\"><span style=\"font-size: 20px\">停止模拟测试</span></button>\n          </div>\n          <textarea id = \"logFileText\" v-model=\"logInfo.logfileText\" readonly></textarea>\n        </div>\n      </div>\n    </div>\n    <div style=\"border: solid;height: 490px\" >\n      <h1>服务器投影画面</h1>\n      <iframe style=\"height: 400px;width: 50%\" :src=\"server_projection_url\" allowfullscreen=\"allowfullscreen\" ></iframe>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'TestDetails',\n  data () {\n    return {\n      server_projection_url: 'https://player.bilibili.com/player.html?cid=274753927&aid=713418332&page=1&as_wide=1&high_quality=1&danmaku=0', // 服务器投影的url\n      timer: '', // 用于定时刷新\n      currentTestCase: '', // 当前正在进行的测试实例的信息，展示在当前测试信息中，由loadCurrentTestInfo加载\n      logInfo: '' // 测试日志信息，展示在测试日志中，由loadLogInfo加载\n    }\n  },\n  created: function () {\n    console.log('进入测试详情页')\n    this.myRefresh()\n  },\n  mounted: function () {\n    this.timer = setInterval(this.myRefresh, 2000) // 每2秒刷新一次\n    console.log('测试详情页中的信息每3秒刷新一次')\n  },\n  destroyed: function () {\n    clearInterval(this.timer)\n    console.log('停止页面刷新')\n    console.log('离开测试详情页')\n  },\n  methods: {\n    loadLogInfo () { // 加载测试日志信息\n      let _this = this\n      this.$axios.get('/testdetails/loadloginfo').then(resp => {\n        if (resp && resp.data.code === 200) {\n          _this.logInfo = resp.data.result\n          console.log(_this.logInfo)\n        }\n      }).catch(function (error) {\n        console.log(error)\n      })\n    },\n    loadCurrentTestInfo () { // 加载当前测试实例信息\n      let _this = this\n      this.$axios.get('/testdetails/loadcurrenttestcase').then(resp => {\n        if (resp && resp.data.code === 200) {\n          _this.currentTestCase = resp.data.result\n          // console.log(_this.currentTestCase)\n        }\n      }).catch(function (error) {\n        console.log(error)\n      })\n    },\n    callScript () { // 调用python脚本，脚本在服务器后台运行\n      console.log('调用脚本中...')\n      this.$axios.post('/callscript')\n        .then(resp => {\n          if (resp.data.code === 200) {\n            this.$alert(resp.data.message, '提示', {\n              confirmButtonText: '确定调用成功'\n            })\n          } else {\n            this.$alert('脚本调用失败', '提示', {\n              confirmButtonText: '确定调用失败'\n            })\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    endScript () { // 结束服务器后台运行的脚本\n      console.log('结束脚本中...')\n      this.$axios.post('/killscript').then(resp => {\n        if (resp.data.code === 200) {\n          this.$alert(resp.data.message, '提示', {\n            confirmButtonText: '确定'\n          })\n        } else {\n          this.$alert(resp.data.message + 'Error when kill script', '提示', {\n            confirmButtonText: '确定'\n          })\n        }\n        console.log(resp.data.message)\n      }).catch(function (error) {\n        console.log(error)\n      })\n    },\n    myRefresh () {\n      this.loadLogInfo()\n      this.loadCurrentTestInfo()\n    },\n    startTest () {\n      console.log('开始模拟测试')\n      this.callScript()\n    },\n    endTest () {\n      console.log('结束模拟测试')\n      this.endScript()\n      // clearInterval(this.timer)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.parallel-alignment {\n  display: flex;\n  justify-content: center;\n}\n#logFileText {\n  width:60%;\n  height: 240px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/test/TestDetails.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"align-self\":\"center\",\"width\":\"1400px\",\"margin\":\"35px auto 0 auto\"}},[_c('div',{staticClass:\"parallel-alignment\"},[_c('div',{staticClass:\"current-test-info\",staticStyle:{\"border\":\"solid\",\"width\":\"30%\",\"height\":\"340px\"}},[_c('h1',[_vm._v(\"当前测试信息\")]),_vm._v(\" \"),(_vm.currentTestCase)?_c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"目标系统： \"+_vm._s(_vm.currentTestCase.system.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"初始场景选取：\"+_vm._s(_vm.currentTestCase.initialScenario.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"场景测试时长：\"+_vm._s(_vm.currentTestCase.duration)+\" h\")])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"环境要素：\"+_vm._s(_vm.currentTestCase.environments.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"静态障碍物：\"+_vm._s(_vm.currentTestCase.staticObstacles.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"动态障碍物：\"+_vm._s(_vm.currentTestCase.dynamicObstacles.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"交通设施：\"+_vm._s(_vm.currentTestCase.trafficFacilities.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"目标事故类型：\"+_vm._s(_vm.currentTestCase.targetAccidents.type))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"场景评估策略：\"+_vm._s(_vm.currentTestCase.evaluationStrategies.type))])])]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"test-log\",staticStyle:{\"border\":\"solid\",\"width\":\"70%\",\"height\":\"340px\"}},[_c('h1',[_vm._v(\"测试日志\")]),_vm._v(\" \"),_c('div',{staticClass:\"parallel-alignment\"},[(_vm.logInfo)?_c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"测试场景队列数量: \"+_vm._s(_vm.logInfo.testedScenariosNum))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"事故场景数量: \"+_vm._s(_vm.logInfo.accidentScenariosNum))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"迭代次数: \"+_vm._s(_vm.logInfo.iterations))])]),_vm._v(\" \"),_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"测试时长: \"+_vm._s(_vm.logInfo.testDuration)+\" h\")])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.startTest}},[_c('span',{staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\"开始模拟测试\")])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.endTest}},[_c('span',{staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\"停止模拟测试\")])])]):_vm._e(),_vm._v(\" \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.logInfo.logfileText),expression:\"logInfo.logfileText\"}],attrs:{\"id\":\"logFileText\",\"readonly\":\"\"},domProps:{\"value\":(_vm.logInfo.logfileText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.logInfo, \"logfileText\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('div',{staticStyle:{\"border\":\"solid\",\"height\":\"490px\"}},[_c('h1',[_vm._v(\"服务器投影画面\")]),_vm._v(\" \"),_c('iframe',{staticStyle:{\"height\":\"400px\",\"width\":\"50%\"},attrs:{\"src\":_vm.server_projection_url,\"allowfullscreen\":\"allowfullscreen\"}})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0813923a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/test/TestDetails.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0813923a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TestDetails.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestDetails.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestDetails.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0813923a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TestDetails.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0813923a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/test/TestDetails.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}